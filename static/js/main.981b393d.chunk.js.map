{"version":3,"sources":["components/pages/Home.js","components/pages/About.js","util/database.js","components/pages/CountdownPage.js","components/form/CountdownForm.js","components/pages/CountdownCreate.js","components/pages/CountdownList.js","components/NavBar/NavBar.js","components/App/App.js","index.js"],"names":["Link","React","forwardRef","props","ref","innerRef","useStyles","makeStyles","theme","button","margin","spacing","input","display","Home","classes","Container","maxWidth","Typography","variant","component","Button","to","className","color","About","style","whiteSpace","href","hostname","momentDurationFormatSetup","moment","paper","padding","CountdownPage","useState","jsxValues","setJsxValues","countdownData","setCountdownData","currentTime","setCurrentTime","useEffect","id","url","axios","get","getCountdown","match","params","then","response","data","history","length","old_val","countdown_time","time","delta","diff","countdown","duration","format","minus","substring","replace","split","map","val","event_text","setTimeout","Date","now","Paper","elevation","justifyContent","name","textDecoration","convertCountdownValuesToAPI","values","key","CountdownForm","countdownValues","setCountdownValues","errors","setErrors","onChangeCountdown","value","newValue","onSuccessfulCountdownSubmit","countdownKey","console","log","onFailToSubmitCountdown","error","JSON","stringify","onSubmit","event","preventDefault","post","catch","TextField","label","onChange","target","fullWidth","type","onClick","CountdownCreate","CountdownList","listItems","countdownJson","ListItem","push","ListItemText","primary","secondary","List","dense","LinkForward","addresses","root","flexWrap","generateNavlink","NavBar","breadcrumbs","setBreadcrumbs","tempBreadCrumbs","i","address","path","small","up","Breadcrumbs","separator","fontSize","aria-label","xsmall","only","tempNavlinks","generateAllNavlinks","App","Fragment","exact","utils","MomentUtils","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.981b393d.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nconst Link = React.forwardRef((props, ref) => <NavLink innerRef={ref} {...props} />);\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nfunction Home() {\n  const classes = useStyles();\n\n  return (\n      <div>\n        <br/>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"h2\" component=\"h3\">t-min.us</Typography>\n          <br/>\n          <Typography variant=\"body1\">A tool for generating countdowns</Typography>\n          <br/>\n          <Button component={Link} to='/list' variant=\"contained\" className={classes.button}>List</Button>\n          <Button component={Link} to='/create' variant=\"contained\" color=\"primary\" className={classes.button}>Create</Button>\n        </Container>\n      </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction About() {\n    return (\n      <div>\n        <br/>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"h4\">\n              About <span style={{whiteSpace:\"nowrap\"}}>t-min.us</span>\n          </Typography>\n          <br/>\n          <Typography variant=\"body1\">\n              t-min.us is the personal project of <Link href=\"http://rafaeldejesus.com\">Rafael DeJesus</Link>, a CS student at Clemson University. \n          </Typography>\n          <Typography variant=\"body1\">\n              The site is inspired from the <Link href=\"http://archive.is/QOHKV\">\"Survivor 2299\" Fallout release hoax</Link> where a countdown hinting at a release annoucement to the Fallout video game series.  As the time ticked down, the website gave different messages causing hysteria as fans tried to figure out what the messages meant.\n          </Typography>\n          <Typography variant=\"body1\">\n              This site is a work in progress. Feel free to contact me with any feedback.   \n          </Typography>\n          <Typography variant=\"body1\">\n          <Link href=\"https://github.com/Rafael09ED/t-minus-frontend\">Github</Link>   \n          </Typography>\n        </Container>\n      </div>\n  );\n}\n\nexport default About;\n","import axios from 'axios';\nconst hostname = 'http://t-min-dot-us.herokuapp.com/countdown/';\n\n\nconst getCountdowns = () => {\n    let url = hostname  + '/countdown/'\n    return axios.get(url);\n}\n\nconst getCountdown = (id) => {\n    let url = hostname  + '/countdown/' + id\n    return axios.get(url);\n}\n\n\nconst createCountdown = (data) => {\n    let url = hostname  + '/countdown/'\n    return axios.post(url, data);\n}\n\n\nexport { getCountdowns, getCountdown, createCountdown };","import React from 'react';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport { getCountdown } from '../../util/database';\nimport { NavLink } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nmomentDurationFormatSetup(moment);\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1, 2),\n  },\n}));\n\nfunction CountdownPage(props) {\n  const classes = useStyles();\n  const [jsxValues, setJsxValues] = React.useState((<p>loading...</p>));\n  const [countdownData, setCountdownData] = React.useState({});\n  const [currentTime, setCurrentTime] = React.useState(moment());\n\n  React.useEffect(() => {\n    getCountdown(props.match.params.id)\n      .then((response) => {\n        setCountdownData(response.data)\n      });\n  }, [props.match.params.id, props.history.length]);\n\n  React.useEffect(() => {\n    setJsxValues((old_val) => {\n      let countdown_time = moment(countdownData.time);\n      let delta = currentTime.diff(countdown_time);\n      let countdown = moment.duration(delta).format(\"y [years], w [weeks], d [days], h [hours], m [minutes], s [seconds]\");\n      let minus = false;\n      if (countdown[0] === '-'){\n        minus = true;\n        countdown = countdown.substring(1);\n      }\n      return (\n        <div className=\"countdown_timer\">\n          <br></br>\n          <Typography variant=\"h2\">T{minus ? \" - \":\" + \"}{countdown.replace(/,/gi, ',/').split('/').map((val) => <span style={{whiteSpace:\"nowrap\"}}>{val}</span>)}</Typography>\n          <p>{countdownData.event_text}</p> \n        </div>\n      );\n    });\n  }, [countdownData, currentTime])\n\n  React.useEffect(() => {\n    setTimeout(function loop(){\n      setCurrentTime(moment());\n    }, 1000 - ( Date.now() % 1000 ))\n  }, [currentTime])\n\n  return (\n      <div className=\"cdtp_header\">   \n        <Paper elevation={0} className={classes.paper} style={{display: 'flex', justifyContent: 'space-between'}}>\n          <Typography className=\"countdown_timer_name\">{countdownData.name}</Typography>\n          <Typography><NavLink to=\"/\" style={{ textDecoration: 'none', color:'grey' }}>t-min.us</NavLink></Typography>\n        </Paper>\n        {jsxValues}\n      </div>\n  );\n}\n\nexport default CountdownPage;","import React from 'react';\nimport  { Redirect } from 'react-router-dom'\nimport { createCountdown } from '../../util/database';\nimport moment from 'moment';\n\nimport {\n    KeyboardDateTimePicker\n  } from '@material-ui/pickers';\nimport { TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nfunction convertCountdownValuesToAPI(values){\n    return {\n        name: values.name,\n        key: values.key,\n        time: values.time.format()\n    }\n}\n\nfunction getTime(){\n    return moment();\n}\n\nfunction CountdownForm(props) {\n    const [countdownValues, setCountdownValues] = React.useState({name: \"\", time: getTime(), key:\"key\" });\n    const [errors, setErrors] = React.useState()\n\n    const onChangeCountdown = (name, value) => {\n        let newValue = {...countdownValues, [name]:value};\n        setCountdownValues(newValue);\n    };\n\n    const onSuccessfulCountdownSubmit = (response) => {\n        const countdownKey = response.data.id;\n        setErrors(null);\n        console.log(response.data)\n        /* Object.keys(eventValues)\n            .forEach(() => {\n                //todo: add events and redirect to countdown\n            }) */\n        const url = '/-/' + countdownKey ;\n        setErrors(<Redirect to={url}/>)\n        \n    }\n\n    const onFailToSubmitCountdown = (error) => {\n        if (error.response) {\n            setErrors(<div>\n                <h3>Errors:</h3>\n                <pre>{JSON.stringify(error.response.data, null, 2)}</pre>\n            </div>);\n        } else {\n            setErrors(<div>\n                 <h3>Errors:</h3>\n                 <p>No Connection To Server</p>\n            </div>)\n        }\n            \n    } \n\n    const onSubmit = (event) => {\n        if (event) event.preventDefault();\n        console.log(convertCountdownValuesToAPI(countdownValues));\n        createCountdown(convertCountdownValuesToAPI(countdownValues))\n            .then(onSuccessfulCountdownSubmit)\n            .catch(onFailToSubmitCountdown);\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <TextField \n                    margin=\"normal\"\n                    label=\"Title\"\n                    value={countdownValues.name}\n                    onChange={(event) => onChangeCountdown(\"name\", event.target.value)}\n                    fullWidth\n                />\n                <br/>\n                <KeyboardDateTimePicker\n                    margin=\"normal\"\n                    label=\"Epoch\"\n                    format=\"MM/DD/YYYY @ hh:mm a\"\n                    value={countdownValues.time}\n                    onChange={(newValue) => onChangeCountdown(\"time\", newValue)}\n                    fullWidth\n                />\n                <br/>\n                {errors}\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n                    Submit\n                </Button>\n            </form>\n        </div>\n    );\n}\n\nexport default CountdownForm;\n","import React from 'react';\nimport CountdownForm from '../form/CountdownForm';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nfunction CountdownCreate() {\n    return (\n        <div>\n          <br/>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\" component=\"h3\">Create Countdown</Typography>\n            <CountdownForm />\n          </Container>\n        </div>\n    );\n}\n\nexport default CountdownCreate;\n","import React from 'react';\nimport moment from 'moment';\nimport { getCountdowns } from '../../util/database';\nimport { Container, Typography, List, ListItemText, ListItem } from '@material-ui/core';  \n\nfunction CountdownList(props) {\n    const [jsxValues, setJsxValues] = React.useState((<p>loading...</p>));\n    \n    React.useEffect(() => {\n        getCountdowns()\n            .then((response) => {\n                //todo: handle bad response, fix timezone\n                var listItems = response.data.map((countdownJson) => {\n                    return (\n                        <ListItem button onClick={\n                                    (event) => {\n                                        props.history.push(`/-/${countdownJson.id}`)\n                                    }\n                                }>\n                            <ListItemText \n                                key={countdownJson.id} \n                                primary={countdownJson.name}\n                                secondary={moment(countdownJson.time).format('LLLL')}\n                            />\n                        </ListItem>\n                    );\n                })\n                setJsxValues(<List dense={true}>\n                    {listItems}\n                </List>)\n            })\n    }, [props.history, props.history.length]);\n    \n\n    return (\n        <div>\n            <br/>\n            <Container maxWidth=\"sm\">\n                <Typography variant=\"h4\">Latest Countdowns</Typography>\n                <br/>\n                {jsxValues}\n            </Container>\n        </div>\n    );\n}\n\nexport default CountdownList;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Breakpoint } from 'react-socks';\n\nconst LinkForward = React.forwardRef((props, ref) => <NavLink innerRef={ref} {...props} />);\n\nconst addresses = [\n    {url: \"about\", name:\"About\"},\n    {url: \"list\", name:\"Countdowns\"},\n    {url: \"create\", name:\"Create\"}\n]\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n    },\n    paper: {\n      padding: theme.spacing(1, 2),\n    },\n}));\n\n\nfunction generateNavlink(data){\n    return (<Link component={LinkForward} color=\"inherit\" to={data.url}>{data.name}</Link>)\n}\n\nfunction generateAllNavlinks(){\n    const tempNavlinks = []\n    for(var i = 0; i < addresses.length; i++){\n        const address = addresses[i];\n        tempNavlinks.push(generateNavlink(address));\n    }\n    return tempNavlinks;\n}\n\nfunction NavBar(props) {\n    const classes = useStyles();\n    const [breadcrumbs, setBreadcrumbs] = React.useState([]);\n\n    React.useEffect(()=> {\n        var tempBreadCrumbs = [];\n        for(var i = 0; i < addresses.length; i++){\n            const address = addresses[i];\n            if (props.match.params.path === address.url)\n                tempBreadCrumbs.push(generateNavlink(address));\n        }\n        setBreadcrumbs(tempBreadCrumbs);\n    }, [props.match.params.path]);\n\n    if (props.match.params.path === '-') return null\n\n    return (\n        <header style={{display: 'flex', justifyContent: 'space-between'}}>     \n            <Paper elevation={0} className={classes.paper} >\n                <Breakpoint small up>\n                    <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n                        <Link component={LinkForward} color=\"inherit\" to=\"/\">\n                            t-min.us\n                        </Link>\n                        {breadcrumbs}\n                    </Breadcrumbs>\n                </Breakpoint>\n                <Breakpoint xsmall only>\n                    <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n                        <Link component={LinkForward} color=\"inherit\" to=\"/\">\n                            t-min.us\n                        </Link>\n                    </Breadcrumbs>\n                </Breakpoint>\n            </Paper>\n            <nav>\n                <Paper elevation={0} className={classes.paper} >\n                    <Breadcrumbs separator={<div></div>} aria-label=\"breadcrumb\">\n                        {generateAllNavlinks()}\n                    </Breadcrumbs>\n                </Paper>\n            </nav>\n        </header>\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Home from '../pages/Home';\nimport About from '../pages/About';\nimport CountdownPage from '../pages/CountdownPage';\nimport CountdownCreate from '../pages/CountdownCreate';\nimport CountdownList from '../pages/CountdownList';\nimport NavBar from '../NavBar/NavBar';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Route path={'/'} exact component={NavBar} />\n      <Route path={'/:path'} component={NavBar} />\n      <Route path={'/'} exact component={Home} />\n      <Route path={'/list'} exact component={CountdownList} />\n      <Route path={'/about'} exact component={About} />\n      <Route path={'/create'} exact component={CountdownCreate} />\n      <Route path={'/-/:id'} exact component={CountdownPage} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport App from './components/App/App';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport  { BreakpointProvider } from 'react-socks';\n\n\nconst root = (\n  <BrowserRouter>\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <BreakpointProvider>\n        <Route component={App} />\n      </BreakpointProvider>\n    </MuiPickersUtilsProvider>\n  </BrowserRouter>\n);\n\nReactDOM.render(root, document.getElementById('root'));\n"],"sourceRoot":""}